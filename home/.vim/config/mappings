" vim: set filetype=vim:
let mapleader = ' '

cnoremap <expr> %% getcmdtype() == ':' ? expand('%:h').'/' : '%%'

" Window movement
map <C-J> <C-W>j
map <C-K> <C-W>k
map <C-L> <C-W>l
map <C-H> <C-W>h

nnoremap j gj
nnoremap k gk

nnoremap Y y$

nmap <leader>no :noh<CR>

nmap zz ZZ
nmap <leader>ga gg=G
nmap <leader>db :bp\|bd#<CR>
nmap <leader>adb :bufdo bdelete<CR>
nmap <leader>gn :bn<CR>
nmap <leader>gp :bp<CR>

nmap <leader>gg :Ggrep<SPACE>
nmap <leader>ag :Ag<SPACE>

nmap <leader>gu :GundoToggle<CR>

" Fix syntax highlight
nmap <leader>fs :syn sync fromstart<CR>

" Tab Manipulation
nmap mtl :TabberShiftRight<CR>
nmap mth :TabberShiftLeft<CR>
nmap <leader>tn :tabnew<CR>

" Folding
nmap <leader>ff :set foldmethod=syntax<CR>
nmap <leader>fi :set foldmethod=indent<CR>
nmap <leader>fm :set foldmethod=marker<CR>
nmap <leader>fd :set foldmethod=diff<CR>
autocmd FileType php nmap <leader>ff :EnableFastPHPFolds<CR>
nmap <leader>f0 :set foldlevel=0<CR>
nmap <leader>f1 :set foldlevel=1<CR>
nmap <leader>f2 :set foldlevel=2<CR>
nmap <leader>f3 :set foldlevel=3<CR>
nmap <leader>f4 :set foldlevel=4<CR>
nmap <leader>f5 :set foldlevel=5<CR>
nmap <leader>f6 :set foldlevel=6<CR>
nmap <leader>f7 :set foldlevel=7<CR>
nmap <leader>f8 :set foldlevel=8<CR>
nmap <leader>f9 :set foldlevel=9<CR>

nmap <leader>v :vsp<CR>
nmap <leader>h :sp<CR>

vnoremap < <gv
vnoremap > >gv

cmap w!! w !sudo tee % >/dev/null

map <Leader>= <C-w>=

" NERDTree
map <leader>nt :NERDTreeTabsToggle<CR>
nmap <leader>nf :NERDTreeFind<CR>

let NERDTreeShowBookmarks=1
let NERDTreeIgnore=['\.pyc', '\~$', '\.swo$', '\.swp$', '\.git', '\.hg', '\.svn', '\.bzr']
let NERDTreeChDirMode=0
let NERDTreeQuitOnOpen=0
let NERDTreeMouseMode=2
let NERDTreeShowHidden=1
let NERDTreeKeepTreeInNewTab=1
let g:nerdtree_tabs_open_on_gui_startup=0

" Tabularize
nmap <Leader>a& :Tabularize /&<CR>
vmap <Leader>a& :Tabularize /&<CR>
nmap <Leader>a= :Tabularize /=<CR>
vmap <Leader>a= :Tabularize /=<CR>
nmap <Leader>a> :Tabularize /=><CR>
vmap <Leader>a> :Tabularize /=><CR>
nmap <Leader>a: :Tabularize /:<CR>
vmap <Leader>a: :Tabularize /:<CR>
nmap <Leader>a:: :Tabularize /:\zs<CR>
vmap <Leader>a:: :Tabularize /:\zs<CR>
nmap <Leader>a, :Tabularize /,<CR>
vmap <Leader>a, :Tabularize /,<CR>
nmap <Leader>a,, :Tabularize /,\zs<CR>
vmap <Leader>a,, :Tabularize /,\zs<CR>
nmap <Leader>a<Bar> :Tabularize /<Bar><CR>
vmap <Leader>a<Bar> :Tabularize /<Bar><CR>
vmap <Leader>a<Space> :Tabularize /\S\+;$/l1<CR>

" Multiple cursors
let g:multi_cursor_exit_from_visual_mode=0
let g:multi_cursor_exit_from_insert_mode=0

" PHP
let g:pdv_template_dir = $HOME."/.vim/bundle/pdv/templates_snip"
autocmd FileType php noremap <leader>pd :call pdv#DocumentWithSnip()<CR>
autocmd FileType php nmap <leader>pcf :call PhpCsFixerFixFile()<CR>

" SQL
autocmd FileType sql,mysql vmap <leader>fr :SQLUFormatter<CR>
autocmd FileType sql,mysql nmap <leader>fr :SQLUFormatter<CR>

" JSON
nmap <leader>fj <Esc>:%!python -m json.tool<CR><Esc>:set filetype=json<CR>

" Python
let g:pymode_lint_checker = "pyflakes"
let g:pymode_utils_whitespaces = 0
let g:pymode_options = 0

" CtrlP
nmap <leader>T :CtrlPBufTag<CR>
nmap <leader><leader>T :CtrlPBufTagAll<CR>
nmap <leader>b :CtrlPBuffer<CR>

let g:ctrlp_custom_ignore = {
  \ 'dir':  '\.git$\|\.hg$\|\.svn$',
  \ 'file': '\.exe$\|\.so$\|\.dll$\|\.pyc$' }

let g:ctrlp_user_command = {
  \ 'types': {
      \ 1: ['.git', 'cd %s && git ls-files . --cached --exclude-standard --others'],
      \ 2: ['.hg', 'hg --cwd %s locate -I .'],
  \ },
  \ 'fallback': 'find %s -type f'
\ }

" Stop jumping me to an already open buffer.  I know what I'm about.
let g:ctrlp_switch_buffer=0

" Tagbar
let g:tagbar_autofocus = 1
let g:tagbar_autoclose = 0

" Syntastic
let g:syntastic_mode_map = { 'mode': 'passive', 'active_filetypes': [],'passive_filetypes': [] }
nnoremap <C-w>e :SyntasticCheck<CR> :SyntasticToggleMode<CR>

nnoremap <silent> <leader>tt :TagbarToggle<CR>

nnoremap <unique> <Leader>hr :HTTPClientDoRequest<cr>

nnoremap <silent> <leader>w :wa<CR>

" Fugitive
nnoremap <silent> <leader>gs :Gstatus<CR>
nnoremap <silent> <leader>gd :Gdiff<CR>
nnoremap <silent> <leader>gc :Gcommit<CR>
nnoremap <silent> <leader>gb :Gblame<CR>
nnoremap <silent> <leader>gl :Glog<CR>
nnoremap <silent> <leader>gw :Gwrite<CR>:GitGutter<CR>

" Golang
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1

let g:go_fmt_command = "goimports"

" Macros
let @d='/^\(<<<<<<<\|=======\|>>>>>>>\)' " Navigating merge conflict

map <F12> :echo "hi<" . synIDattr(synID(line("."),col("."),1),"name") . '> trans<'
\ . synIDattr(synID(line("."),col("."),0),"name") . "> lo<"
\ . synIDattr(synIDtrans(synID(line("."),col("."),1)),"name") . ">"<CR>

command! Bdi :call DeleteInactiveBufs()
