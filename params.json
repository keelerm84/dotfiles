{"name":"Dotfiles","tagline":"De rigueur dotfiles repo","body":"# dotfiles #\r\n\r\nEveryone has a dotfiles repo, right?  Well this is mine.  It is structured as a\r\ncastle for the [homeshick](https://github.com/andsens/homeshick) tool, which\r\nallows easy management for dotfile repos.\r\n\r\n## Included Tools ##\r\nThis repo contains dotfiles for the tools I use most often\r\n\r\n### vim ###\r\nVim is a great editor.  If you don't know how to use it, then you should\r\ninvest the time to learn.\r\n\r\n### Emacs ###\r\nMost people learn one editor, and it is the one they love for the rest of their\r\nlives.  But for me, one is not enough.\r\n[Emacs](http://www.gnu.org/software/emacs/) is the other of the two giants, and\r\ndefinitely worth your time to learn.\r\n\r\n**NOTE** My emacs configuration is actually stored in another\r\n[repository](https://github.com/keelerm84/.emacs.d).\r\n\r\n### tmux ###\r\nA fantastic [terminal multiplexer](http://tmux.sourceforge.net/).  I was an\r\navid [GNU Screen](http://www.gnu.org/software/screen/) user for a long time,\r\nbut I have come to appreciate the awesomeness that is tmux.\r\n\r\n### zsh ###\r\n[bash](http://www.gnu.org/software/bash/) is fantastic.  There is no denying\r\nit.  But I must say, I have come to love [zsh](http://www.zsh.org/).  It's\r\nquite amazing.\r\n\r\n## Cheat Sheets ##\r\nHere are some cheat sheets with common commands that can be used as a quick reference.\r\n\r\n[vim]()","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}